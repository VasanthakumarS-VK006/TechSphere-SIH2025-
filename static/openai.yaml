```yaml
openapi: 3.0.3
info:
  title: Healthcare API
  description: API for creating FHIR Condition resources with NAMC and ICD-11 codes, integrated with ABDM.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local development server
paths:
  /fhir/Condition:
    post:
      summary: Create a FHIR Condition resource
      description: Creates a Condition resource with user-provided patient ID and NAMC code, validated with an ABHA token.
      requestBody:
        required: true
        content:
          application/fhir+json:
            schema:
              type: object
              properties:
                patientId:
                  type: string
                  description: ABHA ID of the patient
                  example: "123456"
                namcCode:
                  type: string
                  description: NAMC code for the condition
                  example: "ABB1.1"
                condition:
                  $ref: '#/components/schemas/Condition'
                metadata:
                  type: object
                  properties:
                    requestId:
                      type: string
                      description: Unique ID for the request
                      example: "req-123456789"
                    requestSource:
                      type: string
                      description: Source system making the request
                      example: "Hospital EMR"
                    consentId:
                      type: string
                      description: ABDM consent ID
                      example: "consent-987654321"
                    requestTimestamp:
                      type: string
                      format: date-time
                      description: Timestamp of the request
                      example: "2025-09-10T21:16:00+05:30"
                  required: [requestId, requestSource]
              required: [patientId, namcCode, condition, metadata]
      responses:
        '201':
          description: Condition created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  condition: { $ref: '#/components/schemas/Condition' }
                  metadata: { type: object }
                  status: { type: integer }
                  received_headers: { type: object }
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
        '401':
          description: Invalid ABHA token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
      security:
        - bearerAuth: []
components:
  schemas:
    Condition:
      type: object
      properties:
        resourceType:
          type: string
          enum: ["Condition"]
        id:
          type: string
        meta:
          type: object
          properties:
            versionId: { type: string }
            lastUpdated: { type: string, format: date-time }
        identifier:
          type: array
          items:
            type: object
            properties:
              system: { type: string }
              value: { type: string }
        clinicalStatus: { type: object }
        verificationStatus: { type: object }
        code: { type: object }
        subject: { type: object }
        onsetDateTime: { type: string, format: date }
        recordedDate: { type: string, format: date-time }
        recorder: { type: object }
      required: [resourceType, identifier, clinicalStatus, verificationStatus, code, subject, recordedDate]
    OperationOutcome:
      type: object
      properties:
        resourceType:
          type: string
          enum: ["OperationOutcome"]
        issue:
          type: array
          items:
            type: object
            properties:
              severity: { type: string }
              code: { type: string }
              details: { type: object }
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
```
